package parser

import (
	"fmt"
	"io/ioutil"
	"math/rand"
	"os"
	"time"

	"github.com/google/uuid"
	"github.com/tidwall/sjson"
)

func init() {
    rand.Seed(time.Now().Unix())
}

func GetJsonString(filePath string) string{
    jsonFile, err := os.Open(filePath)
    if err != nil {
        panic(err)
    }
    defer jsonFile.Close()

    byteValue, _ := ioutil.ReadAll(jsonFile)
    jsonString := string(byteValue[:])
    
    return jsonString
}

func GetPreparedJsonForRequest(jsonString string, dynamicfields map[string]string) string  {
    newJSON:= jsonString   

    for key, value := range dynamicfields {
        switch value{
            case "timestamp":
               newJSON, _ = sjson.Set(newJSON, key, time.Now().UTC().Format(time.RFC3339))
               //fmt.Println(newJSON)
            case "uuid":
                newJSON, _= sjson.Set(newJSON, key , uuid.New().String())
            case "epoch":
                newJSON, _= sjson.Set(newJSON, key , time.Now().Unix())
            case "epochnano":
                newJSON, _= sjson.Set(newJSON, key , time.Now().UnixNano())
            case "promise_item":
                // first get the number of items to be added
                // between 1-10
                // get the 10 random int as item_id
                // get random boolean flag to set the origin_location or not
                type Location struct {
                    PostalCode string `json:"postal_code"`
                    Country    string `json:"country"`
                }
                
                type OriginLocation struct {
                    *Location
                    LocationId string `json:"location_id,omitempty"`
                }

                type ItemDetails struct {
                    Sku              string          `json:"sku"`
                    Quantity         *int            `json:"qty"`
                    ItemType         string          `json:"item_type"`
                    Origin           *OriginLocation `json:"origin,omitempty"`
                }
                numberOfItems := rand.Intn(5) + 1
                itemsSKU := []string{}
                var items []ItemDetails
                for i := 0 ; i < numberOfItems; i++ {
                    itemId := rand.Intn(400) + 1
                    addOrigin := true
                    var origin *OriginLocation
                    if addOrigin {
                            origin = &OriginLocation{
                                Location: &Location{
                                    PostalCode: "89501",
                                    Country: "US",
                                },
                            }
                    }
                    quantity := rand.Intn(5) + 1
                    items = append(items, ItemDetails{
                        Sku: itemsSKU[itemId],
                        Quantity: &quantity,
                        ItemType: fmt.Sprintf("item_name_%d", itemId),
                        Origin:  origin,
                    })
                }

                newJSON, _ = sjson.Set(newJSON,key, items)
        }
    }
    return newJSON
}